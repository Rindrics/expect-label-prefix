name: Release App Docker image

on:
  push:
    branches:
    - main

jobs:
  tagpr:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - id: run-tagpr
        uses: Songmu/tagpr@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tagpr-tag: ${{ steps.run-tagpr.outputs.tag }}

  docker-build-and-push:
    needs: tagpr
    if: needs.tagpr.outputs.tagpr-tag != ''
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      TAG: ${{ needs.tagpr.outputs.tagpr-tag}}

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - id: lowercase-reponame
      run: |
        echo "IMAGE=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/${{ steps.lowercase-reponame.outputs.IMAGE }}:${{ env.TAG }}

    - name: Image push completed
      run: echo "Docker image ${{ env.TAG }} has been pushed to ghcr.io"

    outputs:
      TAG: ${{ env.TAG }}

  update-major-version-tag:
    needs: docker-build-and-push
    if: needs.docker-build-and-push.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract major version
        id: extract-major-version
        run: |
          TAG=${{ needs.docker-build-and-push.outputs.TAG }}
          MAJOR_VERSION=$(echo "$TAG" | grep -oP '^v\d+')
          echo "MAJOR_VERSION_TAG=$MAJOR_VERSION" >> $GITHUB_OUTPUT

      - id: lowercase-reponame
        run: |
          echo "IMAGE=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image with major version tag
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ steps.lowercase-reponame.outputs.IMAGE }}:${{ steps.extract-major-version.outputs.MAJOR_VERSION_TAG }}
